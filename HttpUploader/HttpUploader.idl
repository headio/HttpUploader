// HttpUploader.idl : IDL source for HttpUploader
//

// This file will be processed by the MIDL tool to
// produce the type library (HttpUploader.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(F6A0A1C9-F652-4FDD-A455-1402D4C97C8E),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IUploader : IDispatch{
  [id(1), helpstring("test")] HRESULT Test([out,retval] LONG* result);
  [id(2)] HRESULT ShowDialog(void);
  [propget, id(3), helpstring("file upload address")] HRESULT UrlPost([out, retval] BSTR* pVal);
  [propput, id(3), helpstring("file upload address")] HRESULT UrlPost([in] BSTR newVal);
  [id(4), helpstring("get selected filename list")] HRESULT GetSelectedFiles([out,retval] IDispatch** result);
  [propget, id(5), helpstring("test callback with js function")] HRESULT OnTest([out, retval] IDispatch** pVal);
  [propput, id(5), helpstring("test callback with js function")] HRESULT OnTest([in] IDispatch* newVal);
  [propget, id(6), helpstring("on post event callback")] HRESULT OnPost([out, retval] IDispatch** pVal);
  [propput, id(6), helpstring("on post event callback")] HRESULT OnPost([in] IDispatch* newVal);
  [propget, id(7), helpstring("state change callback")] HRESULT OnStateChanged([out, retval] IDispatch** pVal);
  [propput, id(7), helpstring("state change callback")] HRESULT OnStateChanged([in] IDispatch* newVal);
  [id(8), helpstring("post file to http server")] HRESULT Post(void);
  [id(9), helpstring("stop upload")] HRESULT Stop(void);
  [id(10), helpstring("calc file's md5")] HRESULT CalcMd5([in] BSTR file_name, [out,retval] BSTR* result);
  [id(11), helpstring("calculate file's md5 async")] HRESULT AsyncCalcMd5([in] BSTR file, [in] IDispatch* callback, [out,retval] LONG* result);
  [id(12), helpstring("post file")] HRESULT PostFile([in] BSTR file, [out, retval] LONG* result);
};
[
	uuid(ED6FA5A2-ACE5-4A5B-8899-72711BF827FC),
	version(1.0),
]
library HttpUploaderLib
{
	importlib("stdole2.tlb");
	[
		uuid(3F31A1AB-6A27-4459-B9D8-C8C459F1F30D)		
	]
	coclass Uploader
	{
		[default] interface IUploader;
	};
};

